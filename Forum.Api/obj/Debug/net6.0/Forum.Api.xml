<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Forum.Api</name>
    </assembly>
    <members>
        <member name="T:Forum.Api.Controllers.AccountController">
            <summary>
            Controller for managing user accounts.
            </summary>
        </member>
        <member name="M:Forum.Api.Controllers.AccountController.#ctor(Forum.Application.IUser.IUserService,Microsoft.Extensions.Options.IOptions{Forum.Api.Infrastructure.Auth.JWTConfiguration})">
            <summary>
            Constructor for AccountController.
            </summary>
            <param name="userService">The user service dependency.</param>
            <param name="options">The JWT configuration options.</param>
        </member>
        <member name="M:Forum.Api.Controllers.AccountController.Register(Forum.Application.AccountModel.RegisterModel,System.Threading.CancellationToken)">
            <summary>
            Registers a new user.
            </summary>
            <param name="user">The registration model containing user details.</param>
            <param name="cancellation">Cancellation token for the operation.</param>
            <returns>
            
            Status codes:
            200 OK - If the registration is successful.
            409 Conflict - If the user already exists.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Forum.Api.Controllers.AccountController.Logout(System.Threading.CancellationToken)" -->
        <member name="M:Forum.Api.Controllers.AccountController.Login(Forum.Application.AccountModel.LoginModel,System.Threading.CancellationToken)">
            <summary>
            Logs in a user.
            </summary>
            <param name="user">The login model containing user credentials.</param>
            <param name="cancellation">Cancellation token for the operation.</param>
            <returns>
            
            Status codes:
            200 OK - If the login is successful.
            404 Not Found - If the user does not exist.
            403 Forbidden - If the user is banned.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Forum.Api.Controllers.AccountController.BanAccount(System.String,System.Int32,System.Threading.CancellationToken)" -->
        <!-- Badly formed XML comment ignored for member "M:Forum.Api.Controllers.AccountController.Delete(System.String,System.Threading.CancellationToken)" -->
        <member name="M:Forum.Api.Controllers.AccountController.GetAll(System.Threading.CancellationToken)">
            <summary>
            Retrieves all user accounts.
            </summary>
            <param name="cancellationToken">A cancellation token for the operation.</param>
            <returns>
            status code:
            200 OK - If the operation is successful.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Forum.Api.Controllers.AccountController.GetById(System.String,System.Threading.CancellationToken)" -->
        <!-- Badly formed XML comment ignored for member "M:Forum.Api.Controllers.AccountController.Update(Forum.Application.AccountModel.AccountRequestmodel,System.Threading.CancellationToken)" -->
        <!-- Badly formed XML comment ignored for member "M:Forum.Api.Controllers.AccountController.UploadImage(System.String,System.Threading.CancellationToken)" -->
        <!-- Badly formed XML comment ignored for member "M:Forum.Api.Controllers.AccountController.GetByEmail(System.String,System.Threading.CancellationToken)" -->
        <!-- Badly formed XML comment ignored for member "M:Forum.Api.Controllers.AccountController.GetAllComments(System.String,System.Threading.CancellationToken)" -->
        <!-- Badly formed XML comment ignored for member "M:Forum.Api.Controllers.AccountController.GetAllArticles(System.String,System.Threading.CancellationToken)" -->
        <member name="M:Forum.Api.Controllers.AccountController.ChangePassword(Forum.Api.Models.ChangePasswordModel,System.Threading.CancellationToken)">
            <summary>
            Changes the password for the current user.
            </summary>
            <param name="password">The new password of the user.</param>
            <param name="cancellationToken">Cancellation token for the operation.</param>
            <returns>
            
            Status codes:
            200 OK - If the password change is successful.
            400 Bad Request - If the new and confirmed passwords do not match.
            </returns>
        </member>
        <member name="T:Forum.Api.Controllers.ArticleController">
            <summary>
            Controller for managing user Articles.
            </summary>
        </member>
        <member name="M:Forum.Api.Controllers.ArticleController.#ctor(Forum.Application.IArticle.IArticleService)">
            <summary>
            Constructor for AccountController.
            </summary>
            <param name="articleService">The article service dependency.</param>
        </member>
        <member name="M:Forum.Api.Controllers.ArticleController.GetComments(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves comments for a specific article.
            </summary>
            <param name="articleId">The ID of the article for which comments are to be retrieved.</param>
            <param name="cancellationToken">Cancellation token for the operation.</param>
            <returns>
            
            Status codes:
            200 OK - If comments are retrieved successfully.
            </returns>
        </member>
        <member name="M:Forum.Api.Controllers.ArticleController.CreateArticle(Forum.Application.ArticleModel.ArticleRequestModel,System.Threading.CancellationToken)">
            <summary>
            Creates a new article.
            </summary>
            <param name="article">The article request model containing article details.</param>
            <param name="cancellationToken">Cancellation token for the operation.</param>
            <returns>
            
            Status codes:
            200 OK - If the article is created successfully.
            400 Bad Request - If the user does not have enough comments to post an article.
            </returns>
        </member>
        <member name="M:Forum.Api.Controllers.ArticleController.DeleteArticle(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an article by its ID.
            </summary>
            <param name="id">The ID of the article to delete.</param>
            <param name="cancellationToken">Cancellation token for the operation.</param>
            <returns>
            
            Status codes:
            200 OK - If the article is deleted successfully.
            </returns>
        </member>
        <member name="M:Forum.Api.Controllers.ArticleController.GetAllArticles(System.Threading.CancellationToken)">
            <summary>
            Retrieves all articles.
            </summary>
            <param name="cancellationToken">Cancellation token for the operation.</param>
            <returns>
            
            Status codes:
            200 OK - If articles are retrieved successfully.
            </returns>
        </member>
        <member name="M:Forum.Api.Controllers.ArticleController.GetArticle(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an article by its ID.
            </summary>
            <param name="id">The ID of the article to retrieve.</param>
            <param name="cancellationToken">Cancellation token for the operation.</param>
            <returns>
            
            Status codes:
            200 OK - If the article is found and retrieved successfully.
            </returns>
        </member>
        <member name="M:Forum.Api.Controllers.ArticleController.GetPendingArticles(System.Threading.CancellationToken)">
            <summary>
            Retrieves pending articles.
            </summary>
            <param name="cancellationToken">Cancellation token for the operation.</param>
            <returns>
            
            Status codes:
            200 OK - If pending articles are retrieved successfully.
            </returns>
        </member>
        <member name="M:Forum.Api.Controllers.ArticleController.Accept(System.String,System.Threading.CancellationToken)">
            <summary>
            accept an article by its ID.
            </summary>
            <param name="id">The ID of the article to accept.</param>
            <param name="cancellationToken">Cancellation token for the operation.</param>
            <returns>
            
            Status codes:
            200 OK - If the article is updated successfully.
            </returns>
        </member>
        <member name="M:Forum.Api.Controllers.ArticleController.Update(System.String,Forum.Application.ArticleModel.ArticleRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates an article by its ID.
            </summary>
            <param name="id">The ID of the article to update.</param>
            <param name="articleRequestModel">The model of article  request to update.</param>
            <param name="cancellationToken">Cancellation token for the operation.</param>
            <returns>
            
            Status codes:
            200 OK - If the article is updated successfully.
            </returns>
        </member>
        <member name="T:Forum.Api.Controllers.CommentController">
            <summary>
            Controller for managing User Comments.
            </summary>
        </member>
        <member name="M:Forum.Api.Controllers.CommentController.#ctor(Forum.Application.IComment.ICommentService)">
            <summary>
            Constructor for AccountController.
            </summary>
            <param name="commentService">The Comments service dependency.</param>
        </member>
        <member name="M:Forum.Api.Controllers.CommentController.CreateComment(Forum.Application.CommentModel.CommentRequestModel,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new comment for an article.
            </summary>
            <param name="request">The comment request model containing comment details.</param>
            <param name="articleID">The ID of the article to which the comment belongs.</param>
            <param name="cancellationToken">Cancellation token for the operation.</param>
            <returns>
            
            Status codes:
            200 OK - If the comment is created successfully.
            400 Bad Request - If the comment is not allowed.
            </returns>
        </member>
        <member name="M:Forum.Api.Controllers.CommentController.DeleteComment(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a comment by its ID.
            </summary>
            <param name="id">The ID of the comment to delete.</param>
            <param name="cancellationToken">Cancellation token for the operation.</param>
            <returns>
            
            Status codes:
            200 OK - If the comment is deleted successfully.
            </returns>
        </member>
        <member name="M:Forum.Api.Controllers.CommentController.GetCommentById(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a comment by its ID.
            </summary>
            <param name="id">The ID of the comment to retrieve.</param>
            <param name="cancellationToken">Cancellation token for the operation.</param>
            <returns>
            
            Status codes:
            200 OK - If the comment is found and retrieved successfully.
            404 Not Found - If the comment does not exist.
            </returns>
        </member>
        <member name="T:Forum.Api.Infrastructure.Localization.Language">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Forum.Api.Infrastructure.Localization.Language.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Forum.Api.Infrastructure.Localization.Language.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Forum.Api.Infrastructure.Localization.Language.Ban">
            <summary>
              Looks up a localized string similar to იუზერი გაუქმდა.
            </summary>
        </member>
        <member name="P:Forum.Api.Infrastructure.Localization.Language.CommentIsNotAllowed">
            <summary>
              Looks up a localized string similar to კომენტარის დაწერა არ შეიძლება.
            </summary>
        </member>
        <member name="P:Forum.Api.Infrastructure.Localization.Language.Conflict">
            <summary>
              Looks up a localized string similar to უკვე არსებობს.
            </summary>
        </member>
        <member name="P:Forum.Api.Infrastructure.Localization.Language.Create">
            <summary>
              Looks up a localized string similar to წარმატებით შეიქმნა.
            </summary>
        </member>
        <member name="P:Forum.Api.Infrastructure.Localization.Language.Delete">
            <summary>
              Looks up a localized string similar to წარმატებით წაიშალა.
            </summary>
        </member>
        <member name="P:Forum.Api.Infrastructure.Localization.Language.LogOut">
            <summary>
              Looks up a localized string similar to გამოვიდა.
            </summary>
        </member>
        <member name="P:Forum.Api.Infrastructure.Localization.Language.PasswordIsNotCorrect">
            <summary>
              Looks up a localized string similar to პაროლი არასწორია.
            </summary>
        </member>
        <member name="P:Forum.Api.Infrastructure.Localization.Language.Update">
            <summary>
              Looks up a localized string similar to წარმატებით განახლდა.
            </summary>
        </member>
        <member name="P:Forum.Api.Infrastructure.Localization.Language.UserDoesNotExists">
            <summary>
              Looks up a localized string similar to მომხარებელი არ არსებობს.
            </summary>
        </member>
        <member name="P:Forum.Api.Infrastructure.Localization.Language.UserIsNotAllowedToCreatePost">
            <summary>
              Looks up a localized string similar to მომხარებელს არ შეუძლია კომენტარის დაწერა.
            </summary>
        </member>
    </members>
</doc>
